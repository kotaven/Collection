import java.util.Iterator;
import java.util.Map;
import java.util.Map.Entry;
import java.util.TreeMap;
import java.util.stream.Stream;
public class TreeMapEx1 {
	public static void main(String[] args) {
		TreeMap<String, Integer> tm  = new TreeMap<>();
		tm.put("java", 1);
		tm.put("c++", 2);
		tm.put("kotlin", 3);
		tm.put("golang", 4);
		tm.put("python", 5);
		System.out.println(tm);		
		System.out.println("Total number of tm: " + tm.size());
		System.out.println("after contains: "+tm.containsValue(1));		
		System.out.println("after Check if a given key exists in a TreeMap");
		String name = "java";
		if(tm.containsKey(name)) {
           // Get the value associated with a given key in a TreeMap
		   Integer id = tm.get(name);
		   System.out.println("user with name " + name + " : " + id);
		   } else {
			   System.out.println("user does not exist with name : " + name);
			   }		
		System.out.println("find the first entry");
		System.out.println("First entry in tm : " + tm.firstEntry());		
		System.out.println("find the last entry");
		System.out.println("Last entry in tm : " + tm.lastEntry());		
		System.out.println("find enter key less given key");
		Map.Entry<String, Integer> tm1 = tm.lowerEntry("golang");
		System.out.println(tm1);		
		System.out.println("find enter key higher than given key");
		Entry<String, Integer> tm2 = tm.higherEntry("kotlin");
		System.out.println(tm2);		
		System.out.println(tm);
		System.out.println("after removing golang");
        tm.remove("golang");
        System.out.println("TreeMap after removing entry: " + tm);        
        System.out.println("after search for a key in the TreeMap");
        boolean hasKey = tm.containsKey("java");
        System.out.println("TreeMap contains key java: " + hasKey);
        System.out.println("after earch for a value in the TreeMap");
        boolean hasValue = tm.containsValue(2);
        System.out.println("TreeMap contains value 2: " + hasValue);        
        System.out.println("after Using the for-each loop ");
        for (Entry<String, Integer> entry : tm.entrySet()) {
            System.out.println(entry.getKey() + " => " + entry.getValue());
        }        
        System.out.println("after using the iterator");
        Iterator<Map.Entry<String, Integer>> iterator = tm.entrySet().iterator();
        while (iterator.hasNext()) {
            Entry<String, Integer> entry = iterator.next();
            System.out.println(entry.getKey() + " => " + entry.getValue());
        }        
        System.out.println("after using the foreach");
        Stream<Entry<String, Integer>> stream = tm.entrySet().stream();
        stream.forEach(entry -> System.out.println(entry.getKey() + " => " + entry.getValue()));        
        System.out.println("after using the Stream API");
        Stream<Entry<String, Integer>> stream1 = tm.entrySet().stream();
        stream1.forEach(entry -> System.out.println(entry.getKey() + " => " + entry.getValue()));
	}

}
